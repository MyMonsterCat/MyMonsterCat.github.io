import{_ as r,W as c,X as i,Y as e,Z as n,$ as a,a1 as d,a0 as s,C as o}from"./framework-805f0bea.js";const p={},u=s('<h1 id="中台参考文档2022年3月3日" tabindex="-1"><a class="header-anchor" href="#中台参考文档2022年3月3日" aria-hidden="true">#</a> 中台参考文档<mark>2022年3月3日</mark></h1><p>[TOC]</p><h2 id="一、中台理念" tabindex="-1"><a class="header-anchor" href="#一、中台理念" aria-hidden="true">#</a> 一、中台理念</h2><h3 id="_1-1-存在的问题-传统开发-公司现状" tabindex="-1"><a class="header-anchor" href="#_1-1-存在的问题-传统开发-公司现状" aria-hidden="true">#</a> 1.1 存在的问题（传统开发+公司现状）</h3><blockquote><p>公司现状存在的问题：</p><p>1.烟囱式开发，开发时间久周期长，无法及时响应市场</p><p>2.公司内外发展冲突，业务初期我们面向的是整个监测领域，但是随着市场的扩张，我们的这套系统需要面向其他领域推广，比如椒花水库项目、南岳景区。快速迭代是硬指标。</p><p>3.后台在建设中不断通过模块化设计来追求服务稳定性，这种设计模式反而会导致系统越来越庞大，同时这样的后台变得越来越没法去快速响应前台业务调整所带来的改变。即模块无法复用。</p><p>传统开发存在的问题：</p><ul><li>由于每个项目组互相独立，没有专门的基础技术研发人员去统一技术框架。</li><li>重复造轮子，没有技术深入沉淀，导致学习培训成本很高</li><li>功能片面，不通用，服务框架讲求通用性，尽量让整个公司使用同一套规范以方便维护，但很多框架只实现了某些特定场景的功能，无法通用化（例如两个系统都有文档导出功能，但是都与业务强关联，导致无法通用）</li><li>与主流脱节，无法分享微服务化、容器化、服务网格化的红利</li></ul></blockquote><h3 id="_1-2-目标是什么" tabindex="-1"><a class="header-anchor" href="#_1-2-目标是什么" aria-hidden="true">#</a> 1.2 目标是什么</h3><blockquote><ul><li><p>解决前后台模式弊端、快速响应市场。</p></li><li><p>可拆解业务模块复用功能。</p></li><li><p>实现技术栈统一、功能服务化</p></li></ul></blockquote><h3 id="_1-3-什么是中台" tabindex="-1"><a class="header-anchor" href="#_1-3-什么是中台" aria-hidden="true">#</a> 1.3 什么是中台</h3><blockquote><ul><li>中台是为了在前端的业务发生变化和进行新业务探索时提供最高效的业务支撑能力，它的核心本质就是向前台业务提供服务共享，目标是更好地支持前台业务方进行规模化创新或大规模试错，从而更好地响应市场需求，从技术角度来看，中台就是将每一个复用的模块作为一个独立的应用进行开发与上线，再通过服务调度实现复用</li><li>中台可以划分为技术中台、业务中台、数据中台，技术中台以统一技术栈为主，业务中台以业务拆分服务化，数据中台是面向数据的架构，根据分析结果，调整业务方向辅助决策。</li></ul></blockquote><h3 id="_1-4-中台建设思路" tabindex="-1"><a class="header-anchor" href="#_1-4-中台建设思路" aria-hidden="true">#</a> 1.4 中台建设思路</h3><p>​ 下图整个PAAS层就是我们的中台，底层由技术中台为基础，中层是数据中台，上层是业务中台。在业务架构图中，中台通过服务共享给SAAS层，也就是前台，提供业务代码、技术代码的复用。从而提高开发效率。</p><figure><img src="https://teamblog-1254331889.cos.ap-guangzhou.myqcloud.com/monster/202303021645858.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>核心思路：</p><ul><li><p>一期项目以技术中台和业务中台为主。不做数据中台的原因是，现阶段打造数据中台成本太高，收益太低</p></li><li><p>通过技术栈的统一完成技术中台的构建</p></li><li><p>开发共享服务平台，共享服务，达到功能复用的目的</p></li><li><p>持续的功能服务化，也就是公司技术沉淀，业务沉淀的过程。</p></li></ul>',14),h=s('<h3 id="_1-5-使用中台带来的其他好处" tabindex="-1"><a class="header-anchor" href="#_1-5-使用中台带来的其他好处" aria-hidden="true">#</a> 1.5 使用中台带来的其他好处</h3><ul><li>服务器经济效益</li></ul><figure><img src="https://teamblog-1254331889.cos.ap-guangzhou.myqcloud.com/monster/202303021629124.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>开发人员可以无缝衔，在各项目组开发</li></ul><h2 id="二、技术框架的统一" tabindex="-1"><a class="header-anchor" href="#二、技术框架的统一" aria-hidden="true">#</a> 二、技术框架的统一</h2><h3 id="_2-1-技术框架设计理念" tabindex="-1"><a class="header-anchor" href="#_2-1-技术框架设计理念" aria-hidden="true">#</a> 2.1 技术框架设计理念</h3><blockquote><p>ZD微服务一站式解决方案，提供：架构指南、容器优先/兼容Spring与Service Mesh的框架、最佳实践及DevOps标准化流程。</p></blockquote><p>通过前面的分析知道，当前我们：<strong>缺少一体化的研发流程支撑</strong> 导致各项目规范不统一、发布效率低、容器化问题频出</p><p>所以技术框架的核心设计理念是：</p><blockquote><p>提供微服务架构指南 + 扩展主流微服务框架 + 标准化DevOps流程</p></blockquote><h3 id="_2-2-技术框架能做什么" tabindex="-1"><a class="header-anchor" href="#_2-2-技术框架能做什么" aria-hidden="true">#</a> 2.2 技术框架能做什么</h3><p>前台技术框架以及规范，请前往下面地址查看</p>',12),m={href:"http://192.168.10.18:8081/zd-f2e/zd-f2e-spec",target:"_blank",rel:"noopener noreferrer"},k=s('<p>以下内容针对后台技术框架</p><blockquote><p><strong>提供微服务架构指南</strong></p><ul><li>项目要上微服务，其架构思想是前提，ZD采用用最标准的、方便后续拓展的开发模型</li></ul><p><strong>扩展主流微服务框架</strong></p><ul><li>全面，尽量重用市场已有能力实现，减少框架自身的维护成本</li><li>轻量，原则上不引入高侵入性的三方框架/类库</li><li>可替换，只做扩展，尽量不修改基础框架代码，开发人员完全可以直接基于基础框架开发</li><li>主流，整合流行的微服务框架</li></ul><p>实现上我们选择 <code>Spring Boot</code> 这一业界主流框架，对上兼容 <code>Spring Cloud</code> 与 <code>Service Mesh</code>。</p><p><strong>标准化DevOps流程</strong></p><p>我们在DevOps上另辟蹊径，以Maven为核心构建，其优点在于：</p><ol><li>Maven是行业标准，并且兼容除JVM外的其它语言环境，可支撑所有主流项目</li><li>可在本地执行完成DevOps开发流程，也可与CI/CD工具整合提供测试/生产等环境的DevOps</li><li>对CI/CD工具的依赖度低、开源、标准化，无厂商绑定</li></ol></blockquote><h4 id="_1⃣️-提供微服务架构指南" tabindex="-1"><a class="header-anchor" href="#_1⃣️-提供微服务架构指南" aria-hidden="true">#</a> 1⃣️ 提供微服务架构指南</h4><h5 id="统一版本管理" tabindex="-1"><a class="header-anchor" href="#统一版本管理" aria-hidden="true">#</a> 统一版本管理</h5>',4),_={href:"http://192.168.10.18:8081/zd/zd-starter-parent/-/blob/master/pom.xml",target:"_blank",rel:"noopener noreferrer"},b=e("h5",{id:"统一项目结构",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#统一项目结构","aria-hidden":"true"},"#"),n(" 统一项目结构")],-1),g={href:"https://blog.csdn.net/significantfrank/article/details/110934799",target:"_blank",rel:"noopener noreferrer"},E=s(`<div class="language-ABAP line-numbers-mode" data-ext="ABAP"><pre class="language-ABAP"><code>**** Project                 		// 构建工程
|- moduleA                      // 源码目录
|-  |- **-api                		// 接口层，开放HTTP接口
|-  |- |-api										// api
|-  |- |-vo											// vo
|-  |- **-app                		// 业务逻辑以及DTO转换相关模块
|-  |- |-ao											// ao
|-  |- |-service								// service
|-  |- |-converter							// 转换层
|-  |- **-common             		// 通用常量、异常、工具类等模块
|-  |- **-dao                		// 数据访问层模块
|-  |- |-entity									//数据库实体
|-  |- |-mapper									//mapper
|-  |- **-dto                		// script模块
|-  |- start                    // 项目启动
|-  |- |-**Application					//启动类
|-  |- |-application.yaml				//启动配置
|- pom.xml   
|- docs                         // 文档工程，所有团队共同维护，md方案，后文会介绍
|-  |- **.md
|-  |- images
|- pom.xml                      // 构建工程的POM
|- .gitignore
|- README.md 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 你不必自己手动去创建项目结构，提供了快速搭建项目的脚手架</p>`,2),v={href:"http://192.168.10.18:8081/zd/archetype",target:"_blank",rel:"noopener noreferrer"},f={href:"https://sp-model-1254331889.cos.ap-guangzhou.myqcloud.com/sp-doc/%E5%8F%82%E8%80%83%E8%A7%86%E9%A2%91/2.2.1%E8%84%9A%E6%89%8B%E6%9E%B6%E7%94%9F%E6%88%90.mp4",target:"_blank",rel:"noopener noreferrer"},A=e("h5",{id:"统一开发规范",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#统一开发规范","aria-hidden":"true"},"#"),n(" 统一开发规范")],-1),y=e("p",null,"​ 后台开发规范",-1),x={href:"https://sp-model-1254331889.cos.ap-guangzhou.myqcloud.com/sp-doc/2.1%20%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/Java%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C%28%E9%BB%84%E5%B1%B1%E7%89%88%29.pdf",target:"_blank",rel:"noopener noreferrer"},B={href:"https://sp-model-1254331889.cos.ap-guangzhou.myqcloud.com/sp-doc/2.1%20%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/%E5%8C%85%E7%AE%A1%E7%90%86%E8%A7%84%E8%8C%83V1.0.pdf",target:"_blank",rel:"noopener noreferrer"},z={href:"https://sp-model-1254331889.cos.ap-guangzhou.myqcloud.com/sp-doc/2.1%20%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E8%A7%84%E8%8C%83-V1.0.pdf",target:"_blank",rel:"noopener noreferrer"},C={href:"https://sp-model-1254331889.cos.ap-guangzhou.myqcloud.com/sp-doc/2.1%20%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%E6%96%B9%E6%A1%88.pdf",target:"_blank",rel:"noopener noreferrer"},q={href:"https://sp-model-1254331889.cos.ap-guangzhou.myqcloud.com/sp-doc/2.1%20%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/%E6%9C%8D%E5%8A%A1%E6%8E%A5%E5%8F%A3%E8%A7%84%E8%8C%83-V1.0.pdf",target:"_blank",rel:"noopener noreferrer"},D={href:"https://sp-model-1254331889.cos.ap-guangzhou.myqcloud.com/sp-doc/2.1%20%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/%E7%AC%AC%E4%B8%89%E6%96%B9%E7%BB%84%E4%BB%B6%E4%BD%BF%E7%94%A8%E8%A7%84%E8%8C%83-V1.0.pdf",target:"_blank",rel:"noopener noreferrer"},j={href:"https://sp-model-1254331889.cos.ap-guangzhou.myqcloud.com/sp-doc/2.1%20%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%B5%84%E6%BA%90%E7%AE%A1%E7%90%86%E8%A7%84%E8%8C%83.pdf",target:"_blank",rel:"noopener noreferrer"},F={href:"https://sp-model-1254331889.cos.ap-guangzhou.myqcloud.com/sp-doc/2.1%20%E5%BC%80%E5%8F%91%E8%A7%84%E8%8C%83/%E9%95%9C%E5%83%8F%E7%89%88%E6%9C%AC%E5%91%BD%E5%90%8D.pdf",target:"_blank",rel:"noopener noreferrer"},w=e("h4",{id:"_2⃣️-扩展主流微服务框架",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2⃣️-扩展主流微服务框架","aria-hidden":"true"},"#"),n(" 2⃣️ 扩展主流微服务框架")],-1),M=e("h5",{id:"提供拓展模块",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#提供拓展模块","aria-hidden":"true"},"#"),n(" 提供拓展模块")],-1),S=e("p",null,[e("code",null,"zd-starter-parent"),n(" 中已包含各模块的版本，引用模块依赖时可省略版本号。")],-1),V=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"模块名"),e("th",{style:{"text-align":"left"}},"核心功能"),e("th",null,"地址")])],-1),T=e("td",{style:{"text-align":"left"}},"zd-starter-parent",-1),I=e("td",{style:{"text-align":"left"}},"父Pom模块",-1),O={href:"http://192.168.10.18:8081/zd/zd-starter-parent",target:"_blank",rel:"noopener noreferrer"},P=e("td",{style:{"text-align":"left"}},"cache-component",-1),R=e("td",{style:{"text-align":"left"}},"分布式缓存",-1),J={href:"http://192.168.10.18:8081/zd/zd-framework/-/tree/master/cache-component",target:"_blank",rel:"noopener noreferrer"},L=e("td",{style:{"text-align":"left"}},"dict-component",-1),N=e("td",{style:{"text-align":"left"}},"系统字典",-1),U={href:"http://192.168.10.18:8081/zd/zd-framework/-/tree/master/dict-component",target:"_blank",rel:"noopener noreferrer"},Z=e("td",{style:{"text-align":"left"}},"elasticsearch-start",-1),G=e("td",{style:{"text-align":"left"}},"elasticsearch组件client封装",-1),H={href:"http://192.168.10.18:8081/zd/zd-framework/-/tree/master/elasticsearch-start",target:"_blank",rel:"noopener noreferrer"},Q=e("td",{style:{"text-align":"left"}},"metadata-module",-1),K=e("td",{style:{"text-align":"left"}},"物模型METADATA 基础包",-1),W={href:"http://192.168.10.18:8081/zd/zd-framework/-/tree/master/metadata-module",target:"_blank",rel:"noopener noreferrer"},X=e("td",{style:{"text-align":"left"}},"mybatis-starter",-1),Y=e("td",{style:{"text-align":"left"}},"mybatis增强",-1),$={href:"http://192.168.10.18:8081/zd/zd-framework/-/tree/master/mybatis-starter",target:"_blank",rel:"noopener noreferrer"},ee=e("td",{style:{"text-align":"left"}},"oss-starter",-1),ne=e("td",{style:{"text-align":"left"}},"对象存储",-1),ae={href:"http://192.168.10.18:8081/zd/zd-framework/-/tree/master/oss-starter",target:"_blank",rel:"noopener noreferrer"},te=e("td",{style:{"text-align":"left"}},"redis-start",-1),se=e("td",{style:{"text-align":"left"}},"REDIS 组件",-1),oe={href:"http://192.168.10.18:8081/zd/zd-framework/-/tree/master/redis-start",target:"_blank",rel:"noopener noreferrer"},le=e("td",{style:{"text-align":"left"}},"sp-principal-info",-1),re=e("td",{style:{"text-align":"left"}},"用户信息组件",-1),ce={href:"http://192.168.10.18:8081/zd/zd-framework/-/tree/master/sp-principal-info",target:"_blank",rel:"noopener noreferrer"},ie=e("td",{style:{"text-align":"left"}},"sdk-core",-1),de=e("td",{style:{"text-align":"left"}},"SDK接入基础包",-1),pe={href:"http://192.168.10.18:8081/zd/zd-framework/-/tree/master/sp-sdk-core",target:"_blank",rel:"noopener noreferrer"},ue=e("td",{style:{"text-align":"left"}},"test-starter",-1),he=e("td",{style:{"text-align":"left"}},"单元测试支持",-1),me={href:"http://192.168.10.18:8081/zd/zd-framework/-/tree/master/test-starter",target:"_blank",rel:"noopener noreferrer"},ke=e("td",{style:{"text-align":"left"}},"web-component",-1),_e=e("td",{style:{"text-align":"left"}},"web组件",-1),be={href:"http://192.168.10.18:8081/zd/zd-framework/-/tree/master/web-component",target:"_blank",rel:"noopener noreferrer"},ge=e("td",{style:{"text-align":"left"}},"rocketmq-start",-1),Ee=e("td",{style:{"text-align":"left"}},"rocketmq组件",-1),ve={href:"http://192.168.10.18:8081/zd/zd-framework/-/tree/master/rocketmq-starter",target:"_blank",rel:"noopener noreferrer"},fe=e("td",{style:{"text-align":"left"}},"data-collect",-1),Ae=e("td",{style:{"text-align":"left"}},"数据采集",-1),ye={href:"http://192.168.10.18:8081/zd/zd-framework/-/tree/master/data-collect",target:"_blank",rel:"noopener noreferrer"},xe=e("h5",{id:"提供常用工具集",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#提供常用工具集","aria-hidden":"true"},"#"),n(" 提供常用工具集")],-1),Be={href:"http://192.168.10.18:8081/zd/zd-common.git",target:"_blank",rel:"noopener noreferrer"},ze=s(`<blockquote><ul><li>Json与Java对象互转，支持泛型</li><li>定时器操作，定时和周期性任务</li><li>常用文件操作，根据不同情况获取文件内容、Glob匹配等</li><li>常用字段操作，各类字段验证、身份证提取、UUID创建等</li><li>常用时间处理，常规时间格式化模板</li><li>主流文件MIME整理，MIME分类</li><li>脚本处理</li><li>响应处理及分页模型</li></ul></blockquote><h5 id="代码质量检查" tabindex="-1"><a class="header-anchor" href="#代码质量检查" aria-hidden="true">#</a> 代码质量检查</h5><p>① 安装Alibaba Java Coding Guidelines插件</p><p>​ 略</p><p>② 使用代码质量检查插件</p><p>​ 已集成 <code>Sonar</code> 插件，并和SonarQube连接，只需要在maven中配置 <code>sonar.host.url</code> 为目标地址， 然后执行 <code>mvn clean verify sonar:sonar -P qa -Dsonar.login=&lt;用户名&gt; -Dsonar.password=&lt;密码&gt;</code> 即可。也可以设置 <code>sonar.forceAuthentication=false</code> ，但要注意安全管控。</p><p>使用 <code>&lt;maven.test.skip&gt;true&lt;/maven.test.skip&gt;</code> 可跳过特定模块的测试，<code>&lt;sonar.skip&gt;true&lt;/sonar.skip&gt;</code> 可跳过特定模块的Sonar检查。</p><h5 id="其他推荐配置" tabindex="-1"><a class="header-anchor" href="#其他推荐配置" aria-hidden="true">#</a> 其他推荐配置</h5><p><strong>A.数据验证</strong></p><p>集成了<code>Spring validate</code> 机制，支持针对 <code>URL</code> 及 <code>Bean</code> 的验证。</p><blockquote><ul><li>在 java bean 中添加各项validation，支持标准<code>javax.validation.constraints</code>包下的诸如：<code>NotNull</code></li><li>在Controller中添加 <code>@Validated</code> 注解 ( Spring还支持@Vaild，但这一注解不支持分组 )</li><li>支持Spring原生分组校验</li><li><code>URL</code> 类型的验证必须在类头添加 <code>@Validated</code> 注解</li><li><code>ZD</code> 框架内置了 <code>CreateGroup</code> <code>UpdateGroup</code> 两个验证组，验证组仅是一个标识，可为任何java对象</li></ul></blockquote><p><strong>B.测试支持</strong></p><p>​ 良好的单元测试可以保证代码的高质量，单测的重要原则是内聚、无依赖，好的单测应该是&quot;函数化&quot;的——结果的变化只与传入参数有关。 但实际上我们会的代码往往会与数据库、缓存、MQ等外部工具交互，这会使单测的结果不可控，通常的解决方案是使用Mock，但这无行中引入了单测撰写的成本， <code>ZD</code>使用&quot;内嵌式&quot;工具解决，数据库使用 <code>H2</code> ，Redis使用 <code>embedded redis</code> ，由于 <code>ZD</code> 集群的 <code>Cache</code> <code>Map</code> <code>Lock</code> <code>MQ</code> 都支持 <code>Redis</code> 实现，所以可以做到对主流操作的全覆盖。</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code>// 依赖
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.zcloud.veight<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>test-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code>// 配置
<span class="token key atrule">dew</span><span class="token punctuation">:</span>
  <span class="token key atrule">cluster</span><span class="token punctuation">:</span> <span class="token comment">#所有集群操作都使用reids模拟</span>
    <span class="token key atrule">cache</span><span class="token punctuation">:</span> redis
    <span class="token key atrule">lock</span><span class="token punctuation">:</span> redis
    <span class="token key atrule">map</span><span class="token punctuation">:</span> redis
    <span class="token key atrule">mq</span><span class="token punctuation">:</span> redis

<span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">redis</span><span class="token punctuation">:</span>
    <span class="token key atrule">host</span><span class="token punctuation">:</span> 127.0.0.1
    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">6379</span>
  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>
    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> org.h2.Driver
    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>h2<span class="token punctuation">:</span>mem<span class="token punctuation">:</span>test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>C.<code>@Validated</code> 注解</strong></p><ul><li><p>在Spring Controller类里，<code>@Validated</code> 注解初使用会比较不易上手，在此做下总结</p><ol><li>对于基本数据类型和String类型，要使校验的注解生效，需在该类上方加 <code>@Validated</code> 注解</li><li>对于抽象数据类型，需在形式参数前加<code>@Validated</code>注解</li></ol><p>Spring对抽象数据类型校验抛出异常为<code>MethodArgumentNotValidException</code>，http状态码为400，对基本数据类型校验抛出异常为<code>ConstraintViolationException</code>，http状态码为500，dew对这两种异常做了统一处理，http状态码均返回200，code为400</p></li></ul><p><strong>D.<code>jackson</code> 对于 <code>Java8</code> 时间转换（ <code>SpringMVC</code> 以 <code>jackson</code> 接收 <code>json</code> 数据）</strong></p><ol><li>对于 <code>LocalDateTime</code> 类型，需在参数上加 <code>@JsonFormat</code> 注解，如下：<code>@JsonFormat(shape = JsonFormat.Shape.STRING, pattern = &quot;yyyy-MM-dd HH:mm:ss&quot;)</code></li><li><code>LocalDate,LocalTime,Instant</code> 等，无需配置可自行转换<code>jackson</code> 对于 <code>LocalDateTime</code> 类型的支持与其他三种类型不具有一致性，这是 <code>jackson</code> 需要优化的一个点</li></ol><p><strong>E. 缓存处理</strong></p><p><code>Spring Cache</code> 提供了很好的注解式缓存，但默认没有超时，需要根据使用的缓存容器特殊配置</p><p>Redis缓存过期时间设置</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Bean</span>
<span class="token class-name">RedisCacheManager</span> <span class="token function">cacheManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">final</span> <span class="token class-name">RedisCacheManager</span> redisCacheManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RedisCacheManager</span><span class="token punctuation">(</span>redisTemplate<span class="token punctuation">)</span><span class="token punctuation">;</span>
    redisCacheManager<span class="token punctuation">.</span><span class="token function">setUsePrefix</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    redisCacheManager<span class="token punctuation">.</span><span class="token function">setDefaultExpiration</span><span class="token punctuation">(</span><span class="token operator">&lt;</span>过期秒数<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> redisCacheManager<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>F. jdbc 批量插入性能问题</strong></p><p>如果不开启rewriteBatchedStatements=true，那么jdbc会把批量插入当做一行行的单条处理，也就没有达到批量插入的效果</p><p>jdbc配置示例</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>
    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.jdbc.Driver
    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//127.0.0.1<span class="token punctuation">:</span>3306/zd<span class="token punctuation">?</span>useUnicode=true<span class="token important">&amp;characterEncoding=utf-8&amp;rewriteBatchedStatements=true</span>
    <span class="token key atrule">username</span><span class="token punctuation">:</span> root
    <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token number">123456</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3⃣️-标准化devops流程" tabindex="-1"><a class="header-anchor" href="#_3⃣️-标准化devops流程" aria-hidden="true">#</a> 3⃣️ 标准化DevOps流程</h4><h5 id="harbor镜像服务" tabindex="-1"><a class="header-anchor" href="#harbor镜像服务" aria-hidden="true">#</a> harbor镜像服务</h5>`,29),Ce={href:"https://sp-model-1254331889.cos.ap-guangzhou.myqcloud.com/sp-doc/%E5%8F%82%E8%80%83%E8%A7%86%E9%A2%91/2.2.1%E8%84%9A%E6%89%8B%E6%9E%B6%E7%94%9F%E6%88%90.mp4",target:"_blank",rel:"noopener noreferrer"},qe=e("h5",{id:"kubesphere",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#kubesphere","aria-hidden":"true"},"#"),n(" kubesphere")],-1),De={href:"https://sp-model-1254331889.cos.ap-guangzhou.myqcloud.com/sp-doc/3.2%E5%AE%B9%E5%99%A8%E5%8C%96/%E6%89%93%E5%8C%85%E9%95%9C%E5%83%8F%E5%88%B0harbor.pdf",target:"_blank",rel:"noopener noreferrer"},je=e("h5",{id:"ci-cd",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ci-cd","aria-hidden":"true"},"#"),n(" CI/CD")],-1),Fe={href:"https://sp-model-1254331889.cos.ap-guangzhou.myqcloud.com/sp-doc/%E5%8F%82%E8%80%83%E8%A7%86%E9%A2%91/2.2.3-1%E6%B5%81%E6%B0%B4%E7%BA%BF.mp4",target:"_blank",rel:"noopener noreferrer"},we=e("h3",{id:"_2-3-示例demo",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_2-3-示例demo","aria-hidden":"true"},"#"),n(" 2.3 示例demo")],-1),Me={href:"https://sp-model-1254331889.cos.ap-guangzhou.myqcloud.com/sp-doc/%E5%8F%82%E8%80%83%E8%A7%86%E9%A2%91/2.2.3-1%E6%B5%81%E6%B0%B4%E7%BA%BF.mp4",target:"_blank",rel:"noopener noreferrer"},Se=s('<h2 id="三、服务共享" tabindex="-1"><a class="header-anchor" href="#三、服务共享" aria-hidden="true">#</a> 三、服务共享</h2><p>​ 通过前面的了解，中台是达到功能复用，所以中台建设过程中的产物、成果需要以一种展现方式让公司内部人员知道、使用。这种方式可以是文档，也可以是一个仓库等等，任何方式都可以，只要是能达到信息共享、使用的目的，所以我们开发了服务共享平台（sp）。所以共享服务平台广义上可以理解为一个内容发布，能力共享平台。其实这个平台本身不重要，我们关注点不应该在共享服务平台本身，而是共享服务平台背后的中台。</p><p>​ 但是SP作为中台最直观的体现，有必要对它进行了解，才能更深入理解中台的能力与不足。</p><h3 id="_3-1-总体设计" tabindex="-1"><a class="header-anchor" href="#_3-1-总体设计" aria-hidden="true">#</a> 3.1 总体设计</h3><img src="https://teamblog-1254331889.cos.ap-guangzhou.myqcloud.com/monster/202303030915731.png" style="zoom:50%;"><blockquote><p>共享服务平台主要做一件重要的事情，流量转发。通过流量我们就可以理解这个平台做了什么。</p><p>蓝色线条这部分是平台用户流量。面向公司内部用户，还有软件、硬件等细分角色。这块流量只是操作平台本身的一些功能。</p><p>黑色部分流量是应用流量，这里的应用指代我们业务架构中上层应用平台范围内的系统。这部分流量通过应用网关 去使用共享的业务服务，因为是应用层使用，所以流量会大很多，整个系统性能瓶颈也就在应用网关这里。</p></blockquote>',6),Ve={href:"http://192.168.10.18:8081/seven-colorful-stone/sp",target:"_blank",rel:"noopener noreferrer"},Te=s('<h3 id="_3-2-有哪些服务-如何使用" tabindex="-1"><a class="header-anchor" href="#_3-2-有哪些服务-如何使用" aria-hidden="true">#</a> 3.2 有哪些服务，如何使用</h3><img src="https://teamblog-1254331889.cos.ap-guangzhou.myqcloud.com/monster/202303030919528.png" alt="共享服务架构图" style="zoom:50%;"><h4 id="iot和设备中心" tabindex="-1"><a class="header-anchor" href="#iot和设备中心" aria-hidden="true">#</a> IOT和设备中心</h4><p>​ iot是底层服务，设备中心是在其基础上的二开，他们的功能本质上都是一样的。向下支持连接海量设备，采集设备数据上云；向上提供云端API，服务端可通过调用云端API将指令下发至设备端，实现远程控制。</p>',4),Ie={href:"https://doc.sp.zdjcyun.com/IOT%E5%92%8C%E8%AE%BE%E5%A4%87%E4%B8%AD%E5%BF%83/",target:"_blank",rel:"noopener noreferrer"},Oe=e("h4",{id:"监测中心",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#监测中心","aria-hidden":"true"},"#"),n(" 监测中心")],-1),Pe=e("p",null,"​ 监测中心作为工程监测领域的主要业务载体，负责创建监测对象，测项，测点等主要业务对象。管理监测对象中测点、测项以及设备属性之间的关联关系。应用系统接入监测中心后，可完成从创建监测对象和测点到设置测点所监测的测项、绑定对应设备的整个业务场景。",-1),Re={href:"https://doc.sp.zdjcyun.com/%E7%9B%91%E6%B5%8B%E4%B8%AD%E5%BF%83/",target:"_blank",rel:"noopener noreferrer"},Je=e("h4",{id:"告警中心",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#告警中心","aria-hidden":"true"},"#"),n(" 告警中心")],-1),Le=e("p",null,"​ 接受监测中心的数据，并按照制定的规则进行判定，如果是超阈值数据，告警中心会将生成的超阈值数据发布到消息队列，其他业务中心可订阅消费",-1),Ne={href:"https://doc.sp.zdjcyun.com/%E5%91%8A%E8%AD%A6%E4%B8%AD%E5%BF%83/%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E.html",target:"_blank",rel:"noopener noreferrer"},Ue=e("h4",{id:"项目中心",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#项目中心","aria-hidden":"true"},"#"),n(" 项目中心")],-1),Ze=e("p",null,"​ 项目中心提供统一化管理公司项目的功能。",-1),Ge={href:"https://doc.sp.zdjcyun.com/%E9%A1%B9%E7%9B%AE%E4%B8%AD%E5%BF%83/",target:"_blank",rel:"noopener noreferrer"},He=e("h4",{id:"监测数据中心",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#监测数据中心","aria-hidden":"true"},"#"),n(" 监测数据中心")],-1),Qe=e("ul",null,[e("li",null,"接收外部(IOT采集，外部导入等)采集数据，数据预处理，标准监测数据存储与提供"),e("li",null,"从IOT服务获取到设备采集数据，经过一些算法进行处理之后，将数据转换为其他业务中心可直接使用的监测数据")],-1),Ke={href:"https://doc.sp.zdjcyun.com/%E7%9B%91%E6%B5%8B%E6%95%B0%E6%8D%AE%E4%B8%AD%E5%BF%83/%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E.html",target:"_blank",rel:"noopener noreferrer"},We=e("h4",{id:"深度学习服务",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#深度学习服务","aria-hidden":"true"},"#"),n(" 深度学习服务")],-1),Xe=e("p",null,"​ 深度学习服务本质上是为了方便开发者使用公司深度学习服务，它提供了 使用数据训练模型 和 使用模型预测数据 两大功能，可用来预测传感器未来一段时间内的数据。",-1),Ye={href:"https://doc.sp.zdjcyun.com/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%9C%8D%E5%8A%A1/",target:"_blank",rel:"noopener noreferrer"},$e=e("h4",{id:"通知服务",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#通知服务","aria-hidden":"true"},"#"),n(" 通知服务")],-1),en=e("p",null,"​ 通知服务，即通知+服务，通知意味着发送各种类型的消息，服务意味着服务提供方需提供并维护统一的接口，确保发送通知（消息）的稳定性、实时性等。",-1),nn={href:"https://doc.sp.zdjcyun.com/%E9%80%9A%E7%9F%A5%E6%9C%8D%E5%8A%A1/%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E.html",target:"_blank",rel:"noopener noreferrer"},an=e("h4",{id:"视频服务",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#视频服务","aria-hidden":"true"},"#"),n(" 视频服务")],-1),tn=e("p",null,"​ 使用视频服务可以将摄像头接入到公司内管理。",-1),sn={href:"https://doc.sp.zdjcyun.com/%E8%A7%86%E9%A2%91%E6%9C%8D%E5%8A%A1/",target:"_blank",rel:"noopener noreferrer"},on=e("h4",{id:"定时任务服务",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#定时任务服务","aria-hidden":"true"},"#"),n(" 定时任务服务")],-1),ln=e("ul",null,[e("li",null,"一个分布式任务调度平台，其核心设计目标是开发迅速、学习简单、轻量级、易扩展，开箱即用"),e("li",null,"一方面是为了精简系统降低冗余依赖，另一方面是为了提供系统的可控度与稳定性")],-1),rn={href:"https://doc.sp.zdjcyun.com/%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E6%9C%8D%E5%8A%A1/%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E.html",target:"_blank",rel:"noopener noreferrer"},cn=e("h3",{id:"_3-3-示例demo",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#_3-3-示例demo","aria-hidden":"true"},"#"),n(" 3.3 示例demo")],-1),dn={href:"http://192.168.10.18:8081/Monster/model-sdk-test",target:"_blank",rel:"noopener noreferrer"},pn=s(`<p>1.引入maven坐标，配置client</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ModelClientConf</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">ModelClient</span> <span class="token function">modelClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ModelClient</span><span class="token punctuation">(</span><span class="token string">&quot;xxxx&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;xxxxxx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.直接使用即可</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>  <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/createTrainTask&quot;</span><span class="token punctuation">)</span>
  <span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;新增训练任务&quot;</span><span class="token punctuation">)</span>
  <span class="token annotation punctuation">@ApiOperationSupport</span><span class="token punctuation">(</span>order <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">)</span>
  <span class="token keyword">public</span> <span class="token class-name">FileValidResult</span> <span class="token function">createTrainTask</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Valid</span> <span class="token class-name">CreateTrainCmd</span> cmd<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> modelClient<span class="token punctuation">.</span><span class="token function">createTrainTask</span><span class="token punctuation">(</span>cmd<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4);function un(hn,mn){const l=o("font"),t=o("ExternalLinkIcon");return c(),i("div",null,[u,e("blockquote",null,[e("p",null,[n("总结来说："),a(l,{color:"red"},{default:d(()=>[n("实现技术栈的统一 + 服务共享")]),_:1})])]),h,e("blockquote",null,[e("p",null,[n("地址为："),e("a",m,[n("http://192.168.10.18:8081/zd-f2e/zd-f2e-spec"),a(t)])])]),k,e("p",null,[n("​ 提供了"),e("a",_,[n("zd-starter-parent"),a(t)]),n("，里面指定了Spring Boot 版本、mybatis-plus版本等等")]),b,e("p",null,[n("​ 基于"),e("a",g,[n("COLA-4.0"),a(t)]),n("的思想，但并不采取cola4.0的方式，在其基础上使用了最适合本项目的结构，推荐的项目结构如下所示")]),E,e("blockquote",null,[e("ol",null,[e("li",null,[n("👉"),e("a",v,[n("点击跳转查看详细使用说明"),a(t)])]),e("li",null,[n("👉"),e("a",f,[n("点击跳转查看参考视频"),a(t)])])])]),A,y,e("blockquote",null,[e("ul",null,[e("li",null,[e("a",x,[n("Java开发手册(黄山版)"),a(t)])]),e("li",null,[e("a",B,[n("包管理规范V1.0"),a(t)])]),e("li",null,[e("a",z,[n("单元测试规范-V1.0"),a(t)])]),e("li",null,[e("a",C,[n("异常处理方案"),a(t)])]),e("li",null,[e("a",q,[n("服务接口规范-V1.0"),a(t)])]),e("li",null,[e("a",D,[n("第三方组件使用规范-V1.0"),a(t)])]),e("li",null,[e("a",j,[n("腾讯云服务器资源管理规范"),a(t)])]),e("li",null,[e("a",F,[n("镜像版本命名"),a(t)])])])]),w,M,S,e("table",null,[V,e("tbody",null,[e("tr",null,[T,I,e("td",null,[e("a",O,[n("点击跳转"),a(t)])])]),e("tr",null,[P,R,e("td",null,[e("a",J,[n("点击跳转"),a(t)])])]),e("tr",null,[L,N,e("td",null,[e("a",U,[n("点击跳转"),a(t)])])]),e("tr",null,[Z,G,e("td",null,[e("a",H,[n("点击跳转"),a(t)])])]),e("tr",null,[Q,K,e("td",null,[e("a",W,[n("点击跳转"),a(t)])])]),e("tr",null,[X,Y,e("td",null,[e("a",$,[n("点击跳转"),a(t)])])]),e("tr",null,[ee,ne,e("td",null,[e("a",ae,[n("点击跳转"),a(t)])])]),e("tr",null,[te,se,e("td",null,[e("a",oe,[n("点击跳转"),a(t)])])]),e("tr",null,[le,re,e("td",null,[e("a",ce,[n("点击跳转"),a(t)])])]),e("tr",null,[ie,de,e("td",null,[e("a",pe,[n("点击跳转"),a(t)])])]),e("tr",null,[ue,he,e("td",null,[e("a",me,[n("点击跳转"),a(t)])])]),e("tr",null,[ke,_e,e("td",null,[e("a",be,[n("点击跳转"),a(t)])])]),e("tr",null,[ge,Ee,e("td",null,[e("a",ve,[n("点击跳转"),a(t)])])]),e("tr",null,[fe,Ae,e("td",null,[e("a",ye,[n("点击跳转"),a(t)])])])])]),xe,e("p",null,[n("常用工具由 "),e("a",Be,[n("ZD-Common"),a(t)]),n(" 包提供，功能如下")]),ze,e("blockquote",null,[e("p",null,[e("a",Ce,[n("👉 点击查看使用说明"),a(t)])])]),qe,e("blockquote",null,[e("p",null,[e("a",De,[n("👉 点击查看使用说明"),a(t)])])]),je,e("blockquote",null,[e("p",null,[e("a",Fe,[n("👉 流水线教学视频"),a(t)])])]),we,e("blockquote",null,[e("p",null,[e("a",Me,[n("👉 部署案例视频教学"),a(t)])])]),Se,e("blockquote",null,[e("p",null,[n("如想深入了解SP的设计，请前往查看："),e("a",Ve,[n("http://192.168.10.18:8081/seven-colorful-stone/sp"),a(t)])])]),Te,e("blockquote",null,[e("p",null,[n("文档地址："),e("a",Ie,[n("https://doc.sp.zdjcyun.com/IOT和设备中心/"),a(t)])])]),Oe,Pe,e("blockquote",null,[e("p",null,[n("文档地址："),e("a",Re,[n("https://doc.sp.zdjcyun.com/监测中心/"),a(t)])])]),Je,Le,e("blockquote",null,[e("p",null,[n("文档地址："),e("a",Ne,[n("https://doc.sp.zdjcyun.com/告警中心/设计说明.html"),a(t)])])]),Ue,Ze,e("blockquote",null,[e("p",null,[n("文档地址："),e("a",Ge,[n("https://doc.sp.zdjcyun.com/项目中心/"),a(t)])])]),He,Qe,e("blockquote",null,[e("p",null,[n("文档地址："),e("a",Ke,[n("https://doc.sp.zdjcyun.com/监测数据中心/设计说明.html"),a(t)])])]),We,Xe,e("blockquote",null,[e("p",null,[n("文档地址："),e("a",Ye,[n("https://doc.sp.zdjcyun.com/深度学习服务/"),a(t)])])]),$e,en,e("blockquote",null,[e("p",null,[n("文档地址: "),e("a",nn,[n("https://doc.sp.zdjcyun.com/通知服务/设计说明.html"),a(t)])])]),an,tn,e("blockquote",null,[e("p",null,[n("文档地址："),e("a",sn,[n("https://doc.sp.zdjcyun.com/视频服务/"),a(t)])])]),on,ln,e("blockquote",null,[e("p",null,[n("文档地址："),e("a",rn,[n("https://doc.sp.zdjcyun.com/定时任务服务/设计说明.html"),a(t)])])]),cn,e("blockquote",null,[e("p",null,[n("接入深度学习服务的示例："),e("a",dn,[n("http://192.168.10.18:8081/Monster/model-sdk-test"),a(t)])])]),pn])}const _n=r(p,[["render",un],["__file","index.html.vue"]]);export{_n as default};
